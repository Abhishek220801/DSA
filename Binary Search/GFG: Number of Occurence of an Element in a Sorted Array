https://www.geeksforgeeks.org/problems/number-of-occurrence2259/1

int first(int arr[],int n, int x){
    int start=0, end=n-1, res=-1;
    while(start<=end){
        int mid=start+(end-start)/2;
        
        if(arr[mid]>x){
            end=mid-1;
        }
        else if(arr[mid]<x){
            start=mid+1;
        }
        else{
            res=mid;
            end=mid-1;
        }
    }
    return res;
}

int last(int arr[],int n, int x){
    int start=0, end=n-1, res=-1;
    while(start<=end){
        int mid=start+(end-start)/2;
        
        if(arr[mid]>x){
            end=mid-1;
        }
        else if(arr[mid]<x){
            start=mid+1;
        }
        else{
            res=mid;
            start=mid+1;
        }
    }
    return res;
}

int main()
{
    int arr[]={1,3,4,5,6,6,7,7,7,8,10};
    
    int cnt = last(arr,11,7)-first(arr,11,7)+1;
    cout<<cnt;
}



//OR


class Solution {
  public:
    int countFreq(vector<int>& nums, int target) {
        // code here
        int s = 0, e = nums.size()-1, fo = -1, lo = -1;
        while(s<=e){
            int mid = s+(e-s)/2;
            if(target<nums[mid]) e = mid-1;
            else if(target>nums[mid]) s = mid+1;
            else{
                fo = mid;
                e = mid-1;
            }
        }
        s = 0, e = nums.size()-1;
        while(s<=e){
            int mid = s+(e-s)/2;
            if(target<nums[mid]) e = mid-1;
            else if(target>nums[mid]) s = mid+1;
            else{
                lo = mid;
                s = mid+1;
            }
        }
        if(fo==-1) return 0;
        return lo-fo+1;
    }
};
