    int arr[] = {1,2,2,3,3,3,3,3,4,4,5,5,9};
    int n = sizeof(arr)/sizeof(arr[0]);
    int x = 3;

    int lo = 0, hi = n-1, mid; 
    bool flag = false;
    while(lo<=hi){
        mid = lo + (hi-lo)/2;
        if(arr[mid]==x){
            if(arr[mid-1]!=x){
                flag = true;
                cout<<mid;
                break;
            }
            else hi = mid-1; // arr[mid-1] == x
        }
        else if(arr[mid]<x) lo = mid+1;
        else hi = mid-1;
    }
    if(flag==false) cout<<-1;

//OR 
int solve(vector<int>& v, int x){
    int lo = 0, hi = v.size()-1, res = -1, mid;
    while(lo<=hi){
        mid = lo + (hi-lo)/2;
        if(v[mid]==x){
            res = mid;
            hi = mid-1;
        }
        else if(v[mid]>x) hi = mid-1;
        else lo = mid+1;
    }
    return res;
}
