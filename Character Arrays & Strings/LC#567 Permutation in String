https://leetcode.com/problems/permutation-in-string

class Solution {
public:
    bool isFreqSame(int freq1[], int freq2[]){
        for(int i=0;i<26;i++){
            if(freq1[i]!=freq2[i]) return false;
        }
        return true;
    }

    bool checkInclusion(string s1, string s2) {
        int m = s1.length();
        int n = s2.length();
        if(m>n) return false;

        int freq1[26] = {0};
        int freq2[26] = {0};

        for (char c : s1) {
            freq1[c - 'a']++;
        }
        
        for (int i = 0; i < m; ++i) {
            freq2[s2[i] - 'a']++;
        }
        
        if (isFreqSame(freq1, freq2)) {
            return true;
        }
        
        for (int i = m; i < n; ++i) {
            freq2[s2[i - m] - 'a']--; // Remove the leftmost character of the previous window
            freq2[s2[i] - 'a']++;      // Add the new character to the window
            
            if (isFreqSame(freq1, freq2)) {
                return true;
            }
        }
        return false;
    }
};
