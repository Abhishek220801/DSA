https://leetcode.com/problems/valid-palindrome

class Solution {
    private:
        bool valid(char ch){
            if((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z') || (ch>='0'&&ch<='9')){
                return 1;
            }
            return 0;
        }
    char toLowerCase(char ch){
        if((ch>='a'&&ch<='z') || (ch>='0'&&ch<='9')){
            return ch;
        }    
        else{
            char temp = ch - 'A' + 'a';
            return temp;
        }
    }
        
    bool checkPalindrome(string s)
{
    // Write your code here.
    int st=0, e=s.length()-1;
     while(st<=e) {
        if (s[st]!=s[e]){
            return 0;
        }
        else{
            st++;
            e--;
        }
    }     
    return 1;
};
    
public:
    bool isPalindrome(string s) {
        string temp = "";
        
        for(int j=0;j<s.length();j++){
            if(valid(s[j])){
                temp.push_back(s[j]);
            }
        }
        //lower case
        for(int j=0;j<temp.length();j++){
            temp[j]=toLowerCase(temp[j]);
        }
        return checkPalindrome(temp);
    }
};


//OR

class Solution {
public:
    bool isAlphaNum(char ch){
        if((ch>='0' && ch<='9') || (tolower(ch)>='a' && tolower(ch)<='z')) return true;
        return false;
    }
    bool isPalindrome(string s) {
        int n = s.size(); 
        int st = 0, end = n-1;
        while(st<end){
            if(!isAlphaNum(s[st])){
                st++; continue;
            }
            if(!isAlphaNum(s[end])){
                end--; continue;
            }
            if(tolower(s[st])!=tolower(s[end])){
                return false;
            }
            st++; end--;
        }
        return true;
    }
};
