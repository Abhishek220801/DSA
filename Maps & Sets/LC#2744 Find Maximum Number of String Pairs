https://leetcode.com/problems/find-maximum-number-of-string-pairs/

// O(n^2) 
class Solution {
public:
    int maximumNumberOfStringPairs(vector<string>& words) {
        int n = words.size();
        int count = 0;
        for(int i=0; i<n-1; i++){
            string rev = words[i];
            reverse(rev.begin(),rev.end());
            for(int j=i+1; j<n; j++){
                if(words[j]==rev){
                    count++;
                    continue; // don't check further for that element since found a pair
                };
            }
        }
        return count;
    }
};

//better O(n)
class Solution {
public:
    int maximumNumberOfStringPairs(vector<string>& words) {
        int n = words.size();
        unordered_set<string> s;
        int count = 0;
        for(int i=0; i<n; i++){
            s.insert(words[i]);
        }
        for(int i=0; i<n; i++){
            string rev = words[i];
            reverse(rev.begin(),rev.end());
            if(words[i]==rev) continue;
            if(s.find(rev)!=s.end()){
                count++;
                s.erase(words[i]);
            }
        }
        return count;
    }
};

//even better -> O(n)
class Solution {
public:
    int maximumNumberOfStringPairs(vector<string>& words) {
        int n = words.size();
        int count = 0;
        unordered_set<string> s;

        for(int i=0; i<n; i++){
            string rev = words[i];
            reverse(rev.begin(),rev.end());
            if(s.find(rev)!=s.end()) count++;
            else s.insert(words[i]);
        }

        return count;
    }
};
