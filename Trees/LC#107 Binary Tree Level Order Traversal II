https://leetcode.com/problems/binary-tree-level-order-traversal-ii/

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root) return ans;
        queue<TreeNode*> q;
        stack<vector<int>> st;
        q.push(root);
        while(!q.empty()){
            int n = q.size();
            vector<int> curr;
            for(int i=0; i<n; i++){
                TreeNode* temp = q.front();
                q.pop();
                curr.push_back(temp->val);
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            st.push(curr);
        }
        int n = st.size();
        for(int i=1; i<=n; i++){
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
    }
};
