https://leetcode.com/problems/subtree-of-another-tree/

class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q){
        if(!p || !q) return p==q;
        bool isLeftSame = isSameTree(p->left, q->left);
        bool isRightSame = isSameTree(p->right, q->right);
        return (isLeftSame&&isRightSame)&&p->val==q->val;
    }

    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(!root || !subRoot) return root==subRoot;
        if(root->val==subRoot->val&&isSameTree(root,subRoot)) return true; 
        return isSubtree(root->left, subRoot)||isSubtree(root->right, subRoot);
    }
};
