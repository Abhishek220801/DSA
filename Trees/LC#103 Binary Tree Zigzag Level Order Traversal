https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        stack<TreeNode*> s1; // R to L
        stack<TreeNode*> s2; // L to R
        vector<int> curr;
        vector<vector<int>> ans;
        s1.push(root);
        if(!root) return ans;

        while(!s1.empty() || !s2.empty()){
            if(!s1.empty()){
                vector<int> curr;
                while(!s1.empty()){
                    TreeNode* temp = s1.top();
                    s1.pop();
                    curr.push_back(temp->val);
                    if(temp->left){
                        s2.push(temp->left);
                    } if(temp->right){
                        s2.push(temp->right);
                    }
                }
                ans.push_back(curr);
            }
            if(!s2.empty()){
                vector<int> curr;
                while(!s2.empty()){
                    TreeNode* temp = s2.top();
                    s2.pop();
                    curr.push_back(temp->val);
                     if(temp->right){
                        s1.push(temp->right);
                    } if(temp->left){
                        s1.push(temp->left);
                    }
                }
                ans.push_back(curr);
            }
        }
        return ans;
    }
};
