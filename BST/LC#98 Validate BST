https://leetcode.com/problems/validate-binary-search-tree

// TC not good 
class Solution {
private: 
    bool helper(TreeNode* root, long min, long max){
        if(!root) return true;
        if(root->val<=min || root->val>=max) return false;
        return helper(root->left,min,root->val)&&
            helper(root->right,root->val,max);
    }
public:
    bool isValidBST(TreeNode* root) {
        return helper(root, LONG_MIN, LONG_MAX);
    }
};

//or 
// Optimized TC but taking space solution
class Solution {
public:
    // since inorder of BST is sorted
    void inorder(TreeNode* root, vector<int>& ans){
        if(!root) return;
        inorder(root->left,ans);
        ans.push_back(root->val);
        inorder(root->right,ans);
    }

    bool isValidBST(TreeNode* root) {
        vector<int> ans;
        inorder(root,ans);
        for(int i=1; i<ans.size(); i++){
            if(ans[i]<=ans[i-1]) return false;
        }
        return true;
    }
};
