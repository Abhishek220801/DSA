https://leetcode.com/problems/delete-node-in-a-bst/

class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root) return NULL;
        if(root->val>key)
            root->left = deleteNode(root->left,key);
        else if(root->val<key)
            root->right = deleteNode(root->right,key);
        else{  // found the element to be deleted 
            if(!root->left) return root->right;
            else if(!root->right) return root->left;
            else{
                //both children are there 
                //one right and then left recursively -> successor -> min in right subtree
                TreeNode* succ = root->right;
                while(succ && succ->left) succ = succ->left;
                root->val = succ->val;
                root->right = deleteNode(root->right, succ->val);
            }
        }
        return root;
    }
};
