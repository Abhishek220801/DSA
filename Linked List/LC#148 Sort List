https://leetcode.com/problems/sort-list/

class Solution {
public:
    ListNode* merge(ListNode* list1, ListNode* list2) {
        if(!list1) return list2;
        if(!list2) return list1;

        ListNode* ans = new ListNode(-1), *mptr = ans;

        while(list1 && list2){
            if(list1->val >= list2->val){
                mptr->next=list2;
                mptr = list2;
                list2 = list2->next;
            } else{
                mptr->next=list1;
                mptr = list1;
                list1 = list1->next;
            }
        }

        if(list1){
            mptr->next=list1;
        }
        if(list2){
            mptr->next=list2;
        }
        return ans->next;
    };

    ListNode* sortList(ListNode* head) {
        if(!head || !head->next) return head;
        ListNode* slow = head, *fast = head;
        while(fast->next && fast->next->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* a = head, *b = slow->next;
        slow->next = NULL;
        //Merge Sort
        a = sortList(a);
        b = sortList(b);
        ListNode* c = merge(a,b);
        return c;
    }
};
