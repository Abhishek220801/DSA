//Two-pointer approach
//slow and fast pointer approach
//tortoise and hare method/algorithm

Node* getMiddle(Node* &head){
    if(head == NULL){
        cout<<"LL is empty"<<endl;
        return head;
    }
    if(head->next == NULL){
        //single node in LL
        return head;
    }
    Node* slow = head;
    Node* fast = head;
    
    while(slow!=NULL && fast!=NULL){
        fast = fast->next;
        if(fast!=NULL){
            fast = fast->next;
            slow = slow->next;
        }
    }
    return slow;
}
