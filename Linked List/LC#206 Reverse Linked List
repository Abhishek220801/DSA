https://leetcode.com/problems/reverse-linked-list/


//Recursive Approach 

Node* reverse(Node* &prev, Node* &curr){
    //base case 
    if(curr == NULL){
        return prev;
    }
    //1 case solve then recursion sambhalega 
    Node* temp = curr->next;
    curr->next = prev;
    
    return reverse(curr,temp);
}

//Iterative Approach / using loop 

Node* reverseUsingLoop(Node* &head){
    Node* prev = NULL;
    Node* curr = head;
    
    while(curr!=NULL){
        Node* temp = curr->next;
        curr->next = prev;
        prev = curr;
        curr = temp;
    }
    return prev;
}

//Recursive Method - 2

ListNode* reverseList(ListNode* head) {
    if(!head || !head->next) return head;
    ListNode* newHead = reverseList(head->next);
    head->next->next = head;
    head->next = NULL;
    return newHead;
}
