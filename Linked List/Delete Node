void deleteNode(int pos, Node* &head, Node* &tail){
    //empty LL
    if(head==NULL){
        cout<<"Cannot delete, LL is empty"<<endl;
        return;
    }
  
    //deleting first node -> O(1) ST
    if(pos==1){
        Node* temp = head;
        head = head->next;
        temp->next = NULL;
        delete temp;
        return;
    }
    
    //deleting last node -> O(n) T, O(1) S
    int len = findLength(head);
    //position out of bounds of LL
    if(pos>len){
        cout<<"Invalid position given"<<endl;
        return;
    }
    if(pos==len){
        int i = 1;
        Node* prev = head;
        while(i<pos-1){
            prev = prev->next;
            i++;
        }
        //step2
        prev->next = NULL;
        //step3 
        Node* temp = tail;
        //step4 
        tail = prev;
        //step5
        delete temp;
        return;
    }
    
    //deleting at position -> O(n) T, O(1) S
    int i = 1;
    Node* prev = head;
    
    while(i<pos-1){
        prev = prev->next;
        i++;
    }
    Node* curr = prev->next;
    prev->next = curr->next;
    curr->next = NULL;
    delete curr;
}
