https://leetcode.com/problems/rotate-list/description/

ListNode* rotateRight(ListNode* head, int k) {
        ListNode* temp = head;
        int count = 0;
        while(temp!=NULL){
            count++;
            temp = temp->next;
        }
        if(count==0) return NULL;
        k%=count;
        if(k==0) return head;
        count-=k;
        ListNode* curr = head, *prev = NULL;
        while(count--){
            prev = curr;
            curr = curr->next;
        }
        prev->next = NULL;
        ListNode* tail = curr;
        while(tail->next!=NULL){
            tail = tail->next;
        }
        tail->next = head;
        return curr;
    }


//Solution 2:

ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head->next) return head;
        ListNode* temp = head, *tail;
        int len = 0;
        while(temp){
            if(!temp->next) tail = temp;
            temp = temp->next;
            len++;
        }
        k = k%len;
        if(k==0) return head;
        temp = head;
        for(int i=1;i<len-k;i++){
            temp = temp->next;
        }
        tail->next = head;
        head = temp->next;
        temp->next = NULL;
        return head;
    }
