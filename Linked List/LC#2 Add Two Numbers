https://leetcode.com/problems/add-two-numbers/

Node* solve(Node* &head1, Node* &head2){
    if(head1==NULL) return head1;
    if(head2==NULL) return head2;
    
    //step 1: reverse both LL
    head1 = reverse(head1);
    head2 = reverse(head2);
    
    //step 2: add both LL
    Node* ansHead = NULL;
    Node* ansTail = NULL;
    int carry = 0;
    
    while(head1!=NULL && head2!=NULL){
        int sum = carry + head1->data + head2->data;
        int digit = sum%10;
        carry = sum/10;
        
        //create a new node for the digit 
        Node* newNode = new Node(digit);
        
        //attach the new node in the answer wali LL
        if(ansHead == NULL){
            ansHead = newNode;
            ansTail = newNode;
        } else{
            ansTail -> next = newNode;
            ansTail = newNode;
        }
        head1 = head1 -> next;
        head2 = head2 -> next;
    }
    
    while(head1!=NULL){
        int sum = carry + head1->data;
        int digit = sum%10;
        carry = sum/10;
        Node* newNode = new Node(digit);
        ansTail -> next = newNode;
        ansTail = newNode;
        head1 = head1 -> next;
    }
    while(head2!=NULL){
        int sum = carry + head2->data;
        int digit = sum%10;
        carry = sum/10;
        Node* newNode = new Node(digit);
        ansTail -> next = newNode;
        ansTail = newNode;
        head2 = head2 -> next;
    }
    //handle carry for alag second
    while(carry!=0){
        int sum = carry;
        int digit = sum%10;
        carry = sum/10;
        Node* newNode = new Node(digit);
        ansTail -> next = newNode;
        ansTail = newNode;
    }
    
    //step 3: reverse the ans LL
    ansHead = reverse(ansHead);
    return ansHead;
}
